﻿@using BookReviewSite.Data.Entities
@model Genre

@{
    ViewData["Title"] = "Edit Genre";
}
<head>
    <link rel="stylesheet" href="~/css/ViewStyle.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

</head>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header">
                    <h4><i class="fas fa-edit me-2"></i>@ViewData["Title"]</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" class="needs-validation" novalidate>
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>
                        <input type="hidden" asp-for="GenreId" />

                        <div class="mb-3">
                            <label asp-for="Name" class="form-label"></label>
                            <input asp-for="Name" class="form-control" required />
                            <span asp-validation-for="Name" class="text-danger"></span>
                            <div class="invalid-feedback">
                                Please provide a genre name.
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-1"></i> Back to List
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-1"></i> Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}