@using BookReviewSite.Data.Entities
@model IEnumerable<Book>

@{
    ViewData["Title"] = "Index";
}

<h1>Books</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-action="Index" method="get">
    <p>
        <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" placeholder="Search by title..." />
        <input type="submit" value="Search" class="btn btn-primary" />
    </p>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Genres)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @string.Join(", ", item.Genres.Select(g => g.Name).ToList())
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author.FullName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.BookId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.BookId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.BookId">Delete</a>
            </td>
        </tr>
}
    


    </tbody>
</table>
@if (!Model.Any())
{
    <p style="margin-top: 20px; color: #666;">No books found.</p>
}